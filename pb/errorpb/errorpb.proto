syntax = "proto3";
package errorpb;

import "github.com/matrixorigin/matrixcube/pb/metapb/metapb.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_enum_prefix_all) = false;

// NotLeader the current shard peer is not leader
message NotLeader {
    uint64         shardID = 1;
    metapb.Replica leader  = 2 [(gogoproto.nullable) = false];
}

// StoreNotMatch current store is not match
message StoreMismatch {
}

// ShardUnavailable the shard is unavailable, maybe destroyed
message ShardUnavailable {
    uint64 shardID = 1;
}

// ShardNotFound the shard replica is not found on the store
message ShardNotFound {
    uint64 shardID = 1;
}

// KeyNotInShard the key is not found on the store
message KeyNotInShard {
    bytes  key     = 1;
    uint64 shardID = 2;
    bytes  start   = 3;
    bytes  end     = 4;
}

// StaleEpoch the current shard peer is stale
message StaleEpoch {
    repeated metapb.Shard newShards = 1 [(gogoproto.nullable) = false];
}

// ServerIsBusy the server is busy
message ServerIsBusy {
}

// StaleCommand the command is stale, need to retry
message StaleCommand {
}

// RaftEntryTooLarge raft entry is too large
message RaftEntryTooLarge {
    uint64 shardID   = 1;
    uint64 entrySize = 2;
}

// LeaseMissing lease is missing
message LeaseMissing {
    uint64 shardID   = 1;
    uint64 replicaID = 2;
}

// LeaseMismatch request lease and replica held lease not match
message LeaseMismatch {
    metapb.EpochLease requestLease     = 1;
    metapb.EpochLease replicaHeldLease = 2;
}

// LeaseReadNotReady lease held replica not ready, because some raft log need to applied.
message LeaseReadNotReady {
}

// Error is a raft error
message Error {
    string            message           = 1;
    NotLeader         notLeader         = 2;
    ShardNotFound     shardNotFound     = 3;
    KeyNotInShard     KeyNotInShard     = 4;
    StaleEpoch        staleEpoch        = 5;
    ServerIsBusy      serverIsBusy      = 6;
    StaleCommand      staleCommand      = 7;
    StoreMismatch     storeMismatch     = 8;
    RaftEntryTooLarge raftEntryTooLarge = 9;
    ShardUnavailable  shardUnavailable  = 10;
    LeaseMissing      leaseMissing      = 11;
    LeaseMismatch     leaseMismatch     = 12;
    LeaseReadNotReady leaseReadNotReady = 13;
}
